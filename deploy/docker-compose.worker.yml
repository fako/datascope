version: '3'

services:

  datascope:
    image: eu.gcr.io/datascope-266618/datascope:${RELEASE_VERSION}
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "3"
          memory: 12G
      restart_policy:
        condition: any
    depends_on:
      - "postgres"
    network_mode: host
    healthcheck:
      test: curl -sS http://localhost:8000/health/?docker=1 || exit 1
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - PYTHONUNBUFFERED=1
      - DJANGO_MODE=${DJANGO_MODE}
      - INVOKE_DJANGO_DEBUG=${INVOKE_DJANGO_DEBUG}
      - INVOKE_POSTGRES_CREDENTIALS=${INVOKE_POSTGRES_CREDENTIALS}
    volumes:
      - ./data:/usr/src/app/data
    ports:
      - "8000:8000"

  postgres:
    image: postgres:14.5
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 4G
      restart_policy:
        condition: any
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: postgres
      POSTGRES_DB: datascope
      PGDATA: /var/lib/postgresql/data/pgdata
      DJANGO_POSTGRES_PASSWORD: ${DJANGO_POSTGRES_PASSWORD}
    volumes:
      - ./postgres/conf/postgresql.conf:/etc/postgresql/postgresql.conf
      - postgres-data:/var/lib/postgresql/data/pgdata
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    network_mode: host
    labels:
      nl.surfpol.db: "postgres"

volumes:
  postgres-data:
