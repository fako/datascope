services:

  datascope:
    build: .
    image: datascope
    command: uwsgi --ini /usr/src/app/uwsgi.ini --py-autoreload=3 --honour-stdin
    volumes:
      - ./src:/usr/src/app
      - ./deploy/environments:/usr/etc/datascope
      - ${DS_DATA_DIR}:/usr/src/data
      - ../datagrowth:/usr/src/datagrowth
    ports:
      - "8000:8000"
    depends_on:
      - "postgres"
    environment:
      - PYTHONUNBUFFERED=1
      - INVOKE_POSTGRES_HOST=postgres
      - DJANGO_MODE=${DJANGO_MODE}
      - INVOKE_DJANGO_DEBUG=${INVOKE_DJANGO_DEBUG}

  postgres:
    image: postgres:14.5
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    environment:
      POSTGRES_PASSWORD: 33SebQd4Ugkqx4KjqanZDsWRXTR54M6k
      POSTGRES_USER: postgres
      POSTGRES_DB: datascope
      PGDATA: /var/lib/postgresql/data/pgdata
      DJANGO_POSTGRES_PASSWORD: ZV35A5x89pbHuiYSrvqroPHKDnng7dRF
    volumes:
      - ./deploy/postgres/conf/postgresql.conf:/etc/postgresql/postgresql.conf
      - postgres-data:/var/lib/postgresql/data/pgdata
      - ./deploy/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432

  redis:
    image: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./deploy/redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"

  elasticsearch:
    hostname: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.2
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
      - ./deploy/environments/development/secrets/service_tokens:/usr/share/elasticsearch/config/service_tokens
      - ./deploy/search/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.3
    environment:
      ELASTICSEARCH_SERVICEACCOUNTTOKEN: ${ELASTICSEARCH_SERVICE_TOKEN}
    depends_on:
      - "elasticsearch"
    ports:
      - "5601:5601"
    volumes:
      - kibana-data:/usr/share/kibana/data
      - ./deploy/search/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml

  nginx:
    image: nginx
    volumes:
      - ./deploy/server/nginx/www:/var/www
      - ./deploy/server/nginx/localhost.conf:/etc/nginx/conf.d/default.conf
      - ./deploy/server/nginx/uwsgi-pass.conf:/etc/nginx/uwsgi-pass.conf
      - ./deploy/server/nginx/server-www.conf:/etc/nginx/server-www.conf
    depends_on:
      - "postgres"
      - "datascope"
    ports:
      - "8888:80"

  adminer:
    image: adminer
    ports:
      - "8081:8080"

volumes:
  postgres-data:
  elastic-data:
  elastic-config:
  kibana-data:
